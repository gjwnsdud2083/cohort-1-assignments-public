version: "3.8"

services:
  caddy:
    image: caddy:latest
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
      - caddy-config:/config
    depends_on:
      - geth
      - sc-deployment-server
    networks:
      - geth-network

  sc-deployer:
    image: ghcr.io/hell-month/foundry:latest
    platform: linux/arm64
    container_name: sc-deployer
    user: root
    volumes:
      - ./sc-deployer:/workspace
      - ./geth-init:/shared
      - .:/workspace-root
    working_dir: /workspace
    entrypoint: ["/bin/sh", "/workspace/entrypoint.sh"]
    depends_on:
      - geth
    networks:
      - geth-network
  sc-deployment-server:
    image: caddy:latest
    container_name: sc-deployment-server
    ports:
      - "8080:80"
    volumes:
      - ./example-deployment.json:/usr/share/caddy/deployment.json
      - ./sc-deployment-server/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - sc-deployer
    networks:
      - geth-network
  geth:
    image: ethereum/client-go:v1.15.0
    container_name: geth
    ports:
      - "8545:8545"  # HTTP RPC
      - "8546:8546"  # WebSocket RPC
      - "30303:30303"  # P2P
      - "30303:30303/udp"  # P2P UDP
    volumes:
      - geth-data:/root/.ethereum
      - ./geth:/geth
    command: >
      --dev
      --datadir /root/.ethereum
      --http
      --http.addr 0.0.0.0
      --http.port 8545
      --http.corsdomain "*"
      --http.vhosts "*"
      --http.api "eth,net,web3,personal,miner,admin,debug"
      --ws
      --ws.addr 0.0.0.0
      --ws.port 8546
      --ws.api "eth,net,web3,personal,miner,admin,debug"
      --ws.origins "*"
      --allow-insecure-unlock
      --mine
      --networkid 1337
      --nodiscover
      --verbosity 3
      --miner.gaslimit 8000000
    restart: unless-stopped
    networks:
      - geth-network
  geth-init:
    image: ethereum/client-go:v1.15.0
    container_name: geth-init
    volumes:
      - ./geth-init:/scripts
      - geth-data:/root/.ethereum
      - ./geth-init:/shared
    entrypoint: ["/bin/sh", "/scripts/entrypoint.sh"]
    depends_on:
      - geth
    networks:
      - geth-network
  # Graph stack
  graph-ipfs:
    image: ipfs/kubo:latest
    container_name: graph-ipfs
    ports:
      - "5001:5001"   # IPFS HTTP API
      # - "8080:8080" # IPFS Gateway (optional)
      # - "4001:4001" # IPFS Swarm (optional)
    environment:
      - IPFS_PROFILE=server
    command: daemon --migrate=true --agent-version-suffix=docker
    volumes:
      - graph-ipfs-data:/data/ipfs
      - graph-ipfs-export:/export
    networks:
      - geth-network

  graph-postgres:
    image: postgres:15-alpine
    container_name: graph-postgres
    environment:
      - POSTGRES_USER=graph
      - POSTGRES_PASSWORD=graph
      - POSTGRES_DB=graph
      - POSTGRES_INITDB_ARGS=--locale=C --encoding=UTF8
      - LANG=C
      - LC_ALL=C
    # Internal only; avoid host port conflicts
    volumes:
      - graph-postgres-data:/var/lib/postgresql/data
    networks:
      - geth-network

  graph-redis:
    image: redis:7-alpine
    container_name: graph-redis
    command: ["redis-server", "--appendonly", "yes"]
    # Internal only
    volumes:
      - graph-redis-data:/data
    networks:
      - geth-network

  graph-node:
    image: graphprotocol/graph-node:latest
    container_name: graph-node
    platform: linux/amd64
    environment:
      # Database
      - postgres_host=graph-postgres
      - postgres_user=graph
      - postgres_pass=graph
      - postgres_db=graph
      # IPFS
      - ipfs=http://graph-ipfs:5001
      # Ethereum RPC (name:URL)
      - ethereum=dev:http://geth:8545
      # Optional: disable consensus checks in dev
      - GRAPH_ALLOW_NON_DETERMINISTIC_IPFS=true
    ports:
      - "8000:8000"   # GraphQL
      - "8001:8001"   # Admin/Status
      # - "8020:8020" # JSON-RPC (optional)
    depends_on:
      - graph-postgres
      - graph-redis
      - graph-ipfs
      - geth
    networks:
      - geth-network

  # blockscout: should be another docker-compose.yml file from https://github.com/blockscout/blockscout/tree/master/docker-compose. Don't create a container in this file.

volumes:
  geth-data:
  caddy-data:
  caddy-config:
  graph-postgres-data:
  graph-redis-data:
  graph-ipfs-data:
  graph-ipfs-export:

networks:
  geth-network:
    name: geth-network